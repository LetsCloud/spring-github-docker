# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - master

# Environment variables available to all jobs and steps in this workflow
env:
  SPRING_BOOT_IMAGE_NAME: spring-github-docker
  SPRING_BOOT_CONTAINER_NAME: spring-github-docker
  SPRING_BOOT_DEPLOYMENT_NAME: spring-github-docker

jobs:
  build:
    runs-on: ubuntu-latest
    name: A job to build and push docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package -Dmaven.test.skip=true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASS }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          pull: true
          push: true
          cache-from: type=registry,ref=letscloud/spring-github-docker:latest
          cache-to: type=inline
          tags: letscloud/spring-github-docker:latest
          build-args: PROFILE=nectar,ARG2=test
    
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
 
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s:d4a44d45-3a39-4209-b247-12175f7233c4
 
      # Deploy Angular & Spring Boot Docker image to the DigitalOcean kubernetes cluster
      - name: Deploy
        run: |-
          kubectl set image deployment/${{env.SPRING_BOOT_DEPLOYMENT_NAME}} ${{ env.SPRING_BOOT_CONTAINER_NAME}}=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SPRING_BOOT_IMAGE_NAME }}:${{ github.sha }}
          kubectl rollout status deployment/${{env.SPRING_BOOT_DEPLOYMENT_NAME}}
          kubectl get services -o wide
